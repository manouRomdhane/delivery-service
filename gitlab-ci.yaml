stages:
  - build
  - test
  - deploy

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

cache:
  key: "${CI_COMMIT_REF_SLUG}"
  paths:
    - .gradle/wrapper
    - .gradle/caches

before_script:
  - apt-get update -qq && apt-get install -y -qq openjdk-21-jdk
  - export JAVA_HOME=/usr/lib/jvm/java-21-openjdk-amd64
  - export PATH=$JAVA_HOME/bin:$PATH
  - java -version
  - ./gradlew --version

build:
  stage: build
  script:
    - ./gradlew clean build -x test
  artifacts:
    paths:
      - build/libs/

test:
  stage: test
  script:
    - ./gradlew test
  artifacts:
    reports:
      junit: build/test-results/test/*.xml

docker-build:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t drive-and-deliver:$CI_COMMIT_SHORT_SHA .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker tag drive-and-deliver:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - main

deploy:
  stage: deploy
  script:
    - echo "Deploying application..."
    - docker pull $CI_REGISTRY_IMAGE:latest
    - docker run -d -p 8080:8080 $CI_REGISTRY_IMAGE:latest
  environment:
    name: production
    url: http://your-server.com
  only:
    - main
